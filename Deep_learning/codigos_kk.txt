from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D, MaxPooling2D
from tensorflow.keras.layers import Activation, Dropout, Flatten, Dense

model = Sequential()
model.add(Flatten(input_shape=XTrain.shape[1:]))
model.add(Dense(256, activation='relu'))
model.add(Dropout(0.5))
model.add(Dense(1, activation='sigmoid'))

model.summary()

model.compile(optimizer='rmsprop',
              loss='binary_crossentropy',
              metrics=['accuracy'])

model.fit(XTrain,YTrain,
          epochs=5,
          batch_size=16)
          #validation_data=(XVal, YVal))
    
oTrain=model.predict(XTrain)
oTest=model.predict(XTest)
        
YTrainE=oTrain.argmax(axis=1)
YTestE=oTest.argmax(axis=1)

PaTrain=100*accuracy_score(YTrain,YTrainE)
PaTest=100*accuracy_score(YTest,YTestE)
        
print('Probabilidad de acierto (Train): %2.2f %%'%(PaTrain))
print('Probabilidad de acierto (Test): %2.2f %%'%(PaTest))